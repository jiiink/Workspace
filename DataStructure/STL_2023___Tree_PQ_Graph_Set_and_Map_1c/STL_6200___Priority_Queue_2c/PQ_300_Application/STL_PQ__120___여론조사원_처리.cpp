/*
[2] N명의 여론 조사원들이 수집한 자료를 등록하기 위하여 대기실에 모여있다.
조사원들은 자신이 수집한 자료의 수, 정수로 표현된다.
그런데 공평하게 접수 처리를 하기 위하여 각 조사원들이 수집한 자료 중 남은 자료의
1/2을 먼저 처리해준다. 순서는 가장 많은 자료를
준비하고 있는 조사원부터 접수처로 불러 처리해준다. 단 그 자료가 10건이하인 경우는
모두 처리해주고 작업을 완료 시킨다.
예를 들어보자 5명의 조사원이 다음과 같이 대기실 W에 있다고 하자.

W= { 84, 70, 50, 44, 23 }

     그러면 제일 먼저 처리되는 사람은 가장 큰 84인데, 이 중 반인 42개를 처리해주고
     다시 대기실로 보낸다. 이제 대기실의 상태는
     { 42, 70, 50, 44, 23 } 이 되어있다. 그 다음 접수대로 가는 사람은 70이며
     이 사람은 35가 되어 다시 대기실로 간다.
     이제 W는 {42, 35, 50, 44, 23 }이 되고 이 중에서 가장 큰 50이 처리되어 25가 되어
     대기상태가 된다.
     이제 W= {42, 35, 25, 44, 23}이 된다. 그 다음 접수대로 와야하는 사람은 제일 큰 44이며
     이는 1/2을 처리한 뒤 22가 되어
     {42, 35, 25, 44, 23}이 된다. 이 작업을 모든 사람이 대기실을 빠져나갈 때까지 계속한다.
     단 1/2을 계산할 때 소숫점 이하는 버린다.
     즉 55건이라면 그 반 27건을 처리하고 28건을 남겨준다. 만일 W={ 17, 7, 5, 3 } 이라면
     17은 8이 되어 W={8, 7, 5, 3}이 된다.
     그 다음에는 8이 빠져나간다. 10 이하인 개수에 대해서는 1/2 작업을 하지 않고 모두
     처리해준다.

     따라서 W={7, 5, 3}이 되고 7, 5, 3 순서로 대기실을 나가게 된다.


*/

#include <bits/stdc++.h>
using namespace std;


int main() {
  vector <int> task { 75, 34, 12, 37, 23 } ;

  priority_queue<int> Wait ;

  for(auto w : task ) Wait.push(w) ;

  int check ;
  int i = 0 ;
  while( ! Wait.empty()) {
        i++ ;
    check = Wait.top() ;
    if( check <= 10 ) { cout << "\n "<< i << ":--" << check ; Wait.pop() ; }
    else { cout << "\n "<< i << ":--" ; Wait.pop() ;
           cout << "and push() " << check ;
           Wait.push(check - check/2) ; }
  }


} // end of main( )

